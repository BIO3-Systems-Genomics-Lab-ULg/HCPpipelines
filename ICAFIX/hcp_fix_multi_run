#!/bin/bash

#   hcp_fix_multi_run - wrapper script for FIX, for HCP pipelines to clean multiple fMRI runs at a time
#   (useful for cleaning shorter runs)
#
#   Requires FIX version 1.067 or later and FSL 6.0 melodic version
#
#   Stephen Smith and Matthew F. Glasser
#
#   SHCOPYRIGHT
#
#   Changes by Timothy B. Brown <tbbrown@wustl.edu>
#
#   1) Changes to support 7T ICAFIX processing based on changes originally made by Keith Jamison <kjamison@umn.edu>
#   2) Changes to log output messages to aid in debugging 
#
#   Changes by Tim Coalson
#
#   1) use melodic from $PATH by default, to make it easier to replace the default version FSL ships with
#
#   Changes by Takuya Hayashi
#
#   1) use brain mask in melodic to reduce memory usage (helps get around bad default compilation operations)
#
#   Changes by Michael Harms
#
#   1) Improvements to script readability and consistency
#   2) Addition of a polynomial detrend option
#   3) Addition of FIX threshold as optional parameter

#############################################################

Usage() {
    cat <<EOF

hcp_fix_multi_run <4D_FMRI_data> <highpass> <concat_name> <do_motion_regression> [<TrainingFile>] [<FixThreshold>]

   Apply FIX cleaning to a concatenated set of input files.

  <4D_FMRI_data>:
     List of the individual fMRI runs to concatenate, joined with '@' symbol (no whitespace)
     Relative path (from launching directory) allowed (nifti extension optional)
     All runs are assumed to have the same repetition time (TR).

  <highpass>: 
     If > 0, is the temporal highpass full-width (2*sigma), in seconds, to apply using 'fslmaths -bptf'.
     If a string "pd#", where # is an integer, applies polynomial detrending of order #.
        Use "dp1" for a linear detrend, "dp2" for a quadratic detrend, etc.
        File names will include "_hppd#".
     If = 0, a linear detrend is applied, same as "pd1", but file names will instead include "_hp0".
     To mimic detrending-like behaviour using the fslmaths approach, set <highpass> to 2000.
     (Note that 'fslmaths -bptf' is much slower than the regression based polynomial detrending).

  <concat_name>:
     Name (including relative or absolute path) to give to the concatenated output files

  <do_motion_regression>:
     Controls whether to regress motion parameters as part of the cleaning.
     Must be specified, use TRUE or FALSE

  [<TrainingFile>] (optional)
     Defaults to "HCP_hp${hp}.RData"
     In the case of polynomial detrending, will use HCP_hp2000.RData

  [<FixThreshold>] (optional)
     Threshold setting in FIX that controls the sensitivity/specificity tradeoff.
     Default = 10.
     To specify a threshold, <TrainingFile> becomes a mandatory argument.

e.g.  hcp_fix_multi_run rfMRI_REST1_RL/rfMRI_REST1_RL.nii.gz@rfMRI_REST1_RL/rfMRI_REST1_RL.nii.gz pd2 rfMRI_REST1_RL_LR/rfMRI_REST1_RL_LR FALSE
        (if launching the script from the '\${StudyFolder}/\${Subject}/MNINonLinear/Results' directory)

EOF
    exit 1
}

if (( $# < 4 ))
then
    #Usage does an exit
    Usage
fi

#############################################################

set -e
unset POSIXLY_CORRECT

# Verify HCPPIPEDIR environment variable is set
if [ -z "${HCPPIPEDIR}" ]; then
	script_name=$(basename "${0}")
	echo "${script_name}: ABORTING: HCPPIPEDIR environment variable must be set"
	exit 1
fi

#  Load function libraries
source ${HCPPIPEDIR}/global/scripts/log.shlib # Logging related functions
log_Msg "HCPPIPEDIR: ${HCPPIPEDIR}"

log_debugOn="" # Set to any non-empty string (e.g., "true") to turn on debugging related output
               # Set to empty string to disable debugging related output

this_script_dir=$(readlink -f "$(dirname "$0")")

# Set this before calling hcp_fix instead, to make it more flexible
#FSL_FIXDIR=$( cd $(dirname $0) ; pwd)
#export FSL_FIXDIR
log_Check_Env_Var FSL_FIXDIR

# All fix settings are held in the settings.sh file - edit this file to suit your setup
source ${FSL_FIXDIR}/settings.sh

# Log FSL_FIX_MATLAB_MODE (from the settings.sh file)
log_Msg "FSL_FIX_MATLAB_MODE: ${FSL_FIX_MATLAB_MODE}"

if [ "${FSL_FIX_MATLAB_MODE}" = "0" ]; then
	log_Err_Abort "Compiled matlab mode not currently supported"
fi

#############################################################

demeanMovementRegressors() {
	In=${1}
	log_Debug_Msg "demeanMovementRegressors: In: ${In}"
	Out=${2}
	log_Debug_Msg "demeanMovementRegressors: Out: ${Out}"
	log_Debug_Msg "demeanMovementRegressors: getting nCols"
	nCols=$(head -1 ${In} | wc -w)
	
	log_Debug_Msg "demeanMovementRegressors: nCols: ${nCols}"
	log_Debug_Msg "demeanMovementRegressors: getting nRows"
	nRows=$(wc -l < ${In})
	log_Debug_Msg "demeanMovementRegressors: nRows: ${nRows}"
	
	AllOut=""
	c=1
	while (( c <= nCols )) ; do
		ColIn=`cat ${In} | sed 's/  */ /g' | sed 's/^ //g' | cut -d " " -f ${c}`
		bcstring=$(echo "$ColIn" | tr '\n' '+' | sed 's/\+*$//g')
		valsum=$(echo "$bcstring" | bc -l)
		valmean=$(echo "$valsum / $nRows" | bc -l)
		ColOut=""
		r=1
		while (( r <= nRows )) ; do
			val=`echo "${ColIn}" | head -${r} | tail -1`
			newval=`echo "${val} - ${valmean}" | bc -l`
			ColOut=`echo ${ColOut} $(printf "%10.6f" $newval)`
			r=$((r+1))
		done
		ColOut=`echo ${ColOut} | tr ' ' '\n'`
		AllOut=`paste <(echo "${AllOut}") <(echo "${ColOut}")`
		c=$((c+1))
	done
	echo "${AllOut}" > ${Out}
}

hp=$2
if [[ "${hp}" == "0" ]]; then
	log_Msg "hp=0 corresponds to a linear detrend"
	pdFlag=TRUE
fi
if [[ "${hp}" == pd* ]]; then
	hpNum=${hp:2}
	pdFlag=TRUE
else
	hpNum=${hp}
fi
if ! [[ "${hpNum}" =~ ^[-]?[0-9]+$ ]]; then
	log_Err_Abort "highpass value of ${hp} is not valid"
fi
if [[ $(echo "${hpNum} < 0" | bc) == "1" ]]; then  #Logic of this script does not support negative hp values
    log_Err_Abort "highpass value must not be negative"
fi

log_Msg "hp: ${hp}"

unset TrainingData
unset FixThresh
if [ $# -ge 5 ] ; then
	TrainingData=$5
	FixThresh=$6
fi
if [ -z "${FixThresh}" ]; then
	FixThresh=10
fi

fmris=`echo ${1} | sed 's/@/ /g'` # replaces the @ that combines the filenames with ' '
log_Msg "fmris: ${fmris}"
ConcatName="${3}"
log_Msg "ConcatName: ${ConcatName}"

#this case logic could go in a helper function, interpret_as_bool or something
case $(echo "$4" | tr '[:upper:]' '[:lower:]') in
    ( true | yes )
        doMotionRegression=TRUE
        ;;
    ( false | no | none )
        doMotionRegression=FALSE
        ;;
    ( * )
        log_Err_Abort "'$4' is not valid for <do_motion_regression>, please use TRUE or FALSE"
        ;;
esac

DIR=`pwd`
log_Msg "PWD : $DIR"

echo $fmris | tr ' ' '\n' #separates paths separated by ' '

## ---------------------------------------------------------------------------
## Preparation (highpass) on the individual runs
## ---------------------------------------------------------------------------

#Loops over the runs and do highpass on each of them
log_Msg "Looping over files and doing highpass to each of them"

NIFTIvolMergeSTRING=""
NIFTIvolhpVNMergeSTRING=""
SBRefVolSTRING=""
MeanVolSTRING=""
VNVolSTRING=""
CIFTIMergeSTRING=""
CIFTIhpVNMergeSTRING=""
MeanCIFTISTRING=""
VNCIFTISTRING=""
MovementNIFTIMergeSTRING=""
MovementNIFTIhpMergeSTRING=""
MovementTXTMergeSTRING=""

for fmri in $fmris ; do
	log_Msg "Top of loop through fmris: fmri: ${fmri}"

	fmriNoExt=$($FSLDIR/bin/remove_ext $fmri)  # $fmriNoExt still includes leading directory components

	# Create necessary strings for merging across runs
	# N.B. Some of these files don't exist yet, and are about to get created
	NIFTIvolMergeSTRING+="${fmriNoExt}_demean "
	NIFTIvolhpVNMergeSTRING+="${fmriNoExt}_hp${hp}_vnts "  #These are the individual run, VN'ed *time series*
	SBRefVolSTRING+="${fmriNoExt}_SBRef "
	MeanVolSTRING+="${fmriNoExt}_mean "
	VNVolSTRING+="${fmriNoExt}_hp${hp}_vn "  #These are the individual run, VN'ed NIFTI *maps* (created by functionhighpassandvariancenormalize)
	CIFTIMergeSTRING+="-cifti ${fmriNoExt}_Atlas_demean.dtseries.nii "
	CIFTIhpVNMergeSTRING+="-cifti ${fmriNoExt}_Atlas_hp${hp}_vn.dtseries.nii "
	MeanCIFTISTRING+="-cifti ${fmriNoExt}_Atlas_mean.dscalar.nii "
	VNCIFTISTRING+="-cifti ${fmriNoExt}_Atlas_hp${hp}_vn.dscalar.nii "  #These are the individual run, VN'ed CIFTI *maps* (created by functionhighpassandvariancenormalize)
	MovementNIFTIMergeSTRING+="${fmriNoExt}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf "
	MovementNIFTIhpMergeSTRING+="${fmriNoExt}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf_hp "
	
	cd `dirname $fmri`
	log_Debug_Msg "pwd: "$(pwd)
	fmri=`basename $fmri`  # After this, $fmri no longer includes the leading directory components
	fmri=`$FSLDIR/bin/imglob $fmri`  # After this, $fmri will no longer have an extension (if there was one initially)
	if [ `$FSLDIR/bin/imtest $fmri` != 1 ]; then
		log_Err_Abort "Invalid 4D_FMRI input file specified: ${fmri}"
	fi

	# Get Movement_Regressors.txt into the format expected by functionhighpassandvariancenormalize.m
	mkdir -p ${fmri}_hp${hp}.ica/mc
	if [ -f Movement_Regressors.txt ] ; then
		log_Debug_Msg "About to create ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf.par file"
		cat Movement_Regressors.txt | awk '{ print $4 " " $5 " " $6 " " $1 " " $2 " " $3}' > ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf.par
	else
		log_Err_Abort "Movement_Regressors.txt not retrieved properly." 
	fi

	#Demean movement regressors, volumes, and CIFTI data
	demeanMovementRegressors Movement_Regressors.txt Movement_Regressors_demean.txt
	MovementTXTMergeSTRING+="$(pwd)/Movement_Regressors_demean.txt "

	${FSLDIR}/bin/fslmaths $fmri -Tmean ${fmri}_mean
	${FSLDIR}/bin/fslmaths $fmri -sub ${fmri}_mean ${fmri}_demean

	${FSL_FIX_WBC} -cifti-reduce ${fmri}_Atlas.dtseries.nii MEAN ${fmri}_Atlas_mean.dscalar.nii
	${FSL_FIX_WBC} -cifti-math "TCS - MEAN" ${fmri}_Atlas_demean.dtseries.nii -var TCS ${fmri}_Atlas.dtseries.nii -var MEAN ${fmri}_Atlas_mean.dscalar.nii -select 1 1 -repeat
	
	# "1st pass" VN on the individual runs; high-pass gets done here as well
	tr=`$FSLDIR/bin/fslval $fmri pixdim4`  #No checking currently that TR is same across runs
	log_Msg "tr: ${tr}"  
	log_Msg "processing FMRI file ${fmri} with highpass ${hp}"

	## MPH: Log output to existing stdout/stderr, rather than a separate .fix.functionhighpassandvariancenormalize.log file
	## Also, note that the -r argument of call_matlab (used here to allow addition of 'addpath' as a command)
	## does not support the use of compiled matlab

	#if [ -e .fix.functionhighpassandvariancenormalize.log ] ; then
	#	rm .fix.functionhighpassandvariancenormalize.log
	#fi
	#${FSL_FIXDIR}/call_matlab.sh -l .fix.functionhighpassandvariancenormalize.log -r "addpath('${this_script_dir}/scripts'); functionhighpassandvariancenormalize($tr, '$hp', '$fmri', '${FSL_FIX_WBC}');"
	matlab_cmd="addpath('${this_script_dir}/scripts'); functionhighpassandvariancenormalize(${tr}, '${hp}', '${fmri}', '${FSL_FIX_WBC}');"
	log_Msg "Run MATLAB/Octave with command..."
	log_Msg "${FSL_FIXDIR}/call_matlab.sh -r ${matlab_cmd}"
	${FSL_FIXDIR}/call_matlab.sh -r "${matlab_cmd}"

	log_Msg "Dims: $(cat ${fmri}_dims.txt)"

	# Demean the movement regressors (in the 'fake-NIFTI' format returned by functionhighpassandvariancenormalize)
	fslmaths ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf -Tmean ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf_mean
	fslmaths ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf -sub ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf_mean ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf
	$FSLDIR/bin/imrm ${fmri}_hp${hp}.ica/mc/prefiltered_func_data_mcf_conf_mean

	cd ${DIR}  # Return to directory where script was launched
	
	log_Msg "Bottom of loop through fmris: fmri: ${fmri}"

done  ### END LOOP (for fmri in $fmris; do)

## ---------------------------------------------------------------------------
## Concatenate the individual runs and create necessary files
## ---------------------------------------------------------------------------

#Make Concatenated Folder
ConcatFolder=`dirname ${ConcatName}`
log_Msg "Making concatenated folder: ${ConcatFolder}"
if [ ! -e ${ConcatFolder} ] ; then  
	mkdir ${ConcatFolder} 
else
	rm -r ${ConcatFolder}  
	mkdir ${ConcatFolder}
fi

ConcatNameNoExt=$($FSLDIR/bin/remove_ext $ConcatName)  # No extension, but still includes the directory path

# Merge volumes from the individual runs
fslmerge -tr ${ConcatNameNoExt}_demean ${NIFTIvolMergeSTRING} $tr
fslmerge -tr ${ConcatNameNoExt}_hp${hp}_vnts ${NIFTIvolhpVNMergeSTRING} $tr
fslmerge -t  ${ConcatNameNoExt}_SBRef ${SBRefVolSTRING}
fslmerge -t  ${ConcatNameNoExt}_mean ${MeanVolSTRING}
fslmerge -t  ${ConcatNameNoExt}_hp${hp}_vn ${VNVolSTRING}
# Average across runs
fslmaths ${ConcatNameNoExt}_SBRef -Tmean ${ConcatNameNoExt}_SBRef
fslmaths ${ConcatNameNoExt}_mean -Tmean ${ConcatNameNoExt}_mean  # "Grand" mean across runs
fslmaths ${ConcatNameNoExt}_demean -add ${ConcatNameNoExt}_mean ${ConcatNameNoExt}
  # Preceeding line adds back in the "grand" mean; resulting file not used below, but want this concatenated version (without HP or VN) to exist
fslmaths ${ConcatNameNoExt}_hp${hp}_vn -Tmean ${ConcatNameNoExt}_hp${hp}_vn  # Mean VN map across the individual runs
fslmaths ${ConcatNameNoExt}_hp${hp}_vnts -mul ${ConcatNameNoExt}_hp${hp}_vn ${ConcatNameNoExt}_hp${hp}
  # Preceeding line restores the mean VN map; The resulting TCS becomes the input to a 2nd pass of VN, which then becomes the input to melodic
fslmaths ${ConcatNameNoExt}_SBRef -bin ${ConcatNameNoExt}_brain_mask # Inserted to create mask to be used in melodic for suppressing memory error - Takuya Hayashi

# Same thing for the CIFTI
${FSL_FIX_WBC} -cifti-merge ${ConcatNameNoExt}_Atlas_demean.dtseries.nii ${CIFTIMergeSTRING}
${FSL_FIX_WBC} -cifti-average ${ConcatNameNoExt}_Atlas_mean.dscalar.nii ${MeanCIFTISTRING}
${FSL_FIX_WBC} -cifti-math "TCS + MEAN" ${ConcatNameNoExt}_Atlas.dtseries.nii -var TCS ${ConcatNameNoExt}_Atlas_demean.dtseries.nii -var MEAN ${ConcatNameNoExt}_Atlas_mean.dscalar.nii -select 1 1 -repeat
${FSL_FIX_WBC} -cifti-merge ${ConcatNameNoExt}_Atlas_hp${hp}_vn.dtseries.nii ${CIFTIhpVNMergeSTRING}
${FSL_FIX_WBC} -cifti-average ${ConcatNameNoExt}_Atlas_hp${hp}_vn.dscalar.nii ${VNCIFTISTRING}
${FSL_FIX_WBC} -cifti-math "TCS * VN" ${ConcatNameNoExt}_Atlas_hp${hp}.dtseries.nii -var TCS ${ConcatNameNoExt}_Atlas_hp${hp}_vn.dtseries.nii -var VN ${ConcatNameNoExt}_Atlas_hp${hp}_vn.dscalar.nii -select 1 1 -repeat

# At this point the concatenated VN'ed time series (both volume and CIFTI, following the "1st pass" VN) can be deleted
log_Msg "Removing the concatenated VN'ed time series"
$FSLDIR/bin/imrm ${ConcatNameNoExt}_hp${hp}_vnts
/bin/rm -f ${ConcatNameNoExt}_Atlas_hp${hp}_vn.dtseries.nii
# Alternatively, if the volume version is needed for any reason, need to at least rename it to avoid conflict with
# same named file that will get created by running functionhighpassandvariancenormalize on the concatfmrihp file
# during the "2nd pass" VN (below)
#$FSLDIR/bin/immv ${ConcatNameNoExt}_hp${hp}_vnts ${ConcatNameNoExt}_hp${hp}_vnts0

# Nor do we need the concatenated demeaned time series (either volume or CIFTI)
log_Msg "Removing the concatenated demeaned time series"
$FSLDIR/bin/imrm ${ConcatNameNoExt}_demean
/bin/rm -f ${ConcatNameNoExt}_Atlas_demean.dtseries.nii

# Also, we no longer need the individual run VN'ed or demeaned time series (either volume or CIFTI); delete to save space
for fmri in $fmris ; do
	log_Msg "Removing the individual run VN'ed and demeaned time series for ${fmri}"
	fmriNoExt=$($FSLDIR/bin/remove_ext $fmri)  # $fmriNoExt still includes leading directory components
	$FSLDIR/bin/imrm ${fmriNoExt}_hp${hp}_vnts
	$FSLDIR/bin/imrm ${fmriNoExt}_demean
	/bin/rm -f ${fmriNoExt}_Atlas_hp${hp}_vn.dtseries.nii
	/bin/rm -f ${fmriNoExt}_Atlas_demean.dtseries.nii

	# Following removes the individual run hp'ed time series
	# MPH, 12/21/2018: Leaving them for now
	#	log_Msg "Removing the individual run HP'ed time series for ${fmri}"
	#	$FSLDIR/bin/imrm ${fmriNoExt}_hp${hp}
	#	/bin/rm -f ${fmriNoExt}_Atlas_hp${hp}.dtseries.nii
done

## ---------------------------------------------------------------------------
## Prepare for melodic on concatenated file
## ---------------------------------------------------------------------------

# concatfmri is intensity normalized and has no overall mean.
# It is also not variance normalized (the mean VN map *across runs* was "restored" above).
# But is detrended and within run demeaned and variance normalized for both volume and CIFTI
concatfmri=`basename ${ConcatNameNoExt}`  # Directory path is now removed
concatfmrihp=${concatfmri}_hp${hp}

#MPH: Need to be in original directory here, for the ${MovementNIFTI*STRING} variables to work
#if user did not use absolute paths for input arguments
mkdir -p ${ConcatFolder}/${concatfmrihp}.ica
log_Debug_Msg "About to put contents of ${MovementTXTMergeSTRING} in Movement_Regressors_demean.txt file"
cat ${MovementTXTMergeSTRING} > ${ConcatFolder}/Movement_Regressors_demean.txt
mkdir ${ConcatFolder}/${concatfmrihp}.ica/mc
fslmerge -tr ${ConcatFolder}/${concatfmrihp}.ica/mc/prefiltered_func_data_mcf_conf_hp ${MovementNIFTIhpMergeSTRING} $tr
fslmerge -tr ${ConcatFolder}/${concatfmrihp}.ica/mc/prefiltered_func_data_mcf_conf ${MovementNIFTIMergeSTRING} $tr

#MPH: Now we can switch to ${ConcatFolder}
cd ${ConcatFolder}

log_Debug_Msg "About to run melodic: Contents of ${concatfmrihp}.ica follow"
if [ ! -z "${log_debugOn}" ] ; then
	ls -lRa ${concatfmrihp}.ica
fi

#grab melodic from $PATH by default, don't hardcode it with respect to $FSLDIR
#we need to do "if which ..." because the script currently uses set -e
if which melodic &> /dev/null
then
    MELODIC=$(which melodic 2> /dev/null)
else
    #if it isn't even in $PATH, fall back on FSLDIR
    MELODIC="${FSLDIR}/bin/melodic"
fi

log_Msg "Running MELODIC located at: $MELODIC"
log_Debug_Msg "Beginning of melodic version log, help, and checksum"
if [ ! -z "${log_debugOn}" ] ; then
	log_Debug_Msg "$MELODIC --version"
	$MELODIC --version
	log_Debug_Msg "$MELODIC --help"
	$MELODIC --help
	log_Debug_Msg "md5sum $MELODIC"
	md5sum $MELODIC
fi
log_Debug_Msg "End of melodic version log, help, and checksum"

AlreadyHP="-1" #Don't run highpass on concatenated data (since hp was done on the individual runs)

## "2nd pass" VN
## This is solely so that we can apply our own variance normalization as part of the spatial ICA, 
## rather than using the VN algorithm internal to melodic
## (The resulting ${concatfmrihp}_vnts time series is NOT the one that gets cleaned by FIX).
## MPH: Log output to existing stdout/stderr, rather than a separate .fix.functionmotionconfounds.log file
## Also, note that the -r argument of call_matlab (used here to allow addition of 'addpath' as a command)
## does not support the use of compiled matlab

#${FSL_FIXDIR}/call_matlab.sh -l .fix.functionhighpassandvariancenormalize.log -r "addpath('${this_script_dir}/scripts'); functionhighpassandvariancenormalize($tr, $AlreadyHP, '$concatfmrihp', '${FSL_FIX_WBC}');"
matlab_cmd="addpath('${this_script_dir}/scripts'); functionhighpassandvariancenormalize(${tr}, ${AlreadyHP}, '${concatfmrihp}', '${FSL_FIX_WBC}');"
log_Msg "Run MATLAB/Octave with command..."
log_Msg "${FSL_FIXDIR}/call_matlab.sh -r ${matlab_cmd}"
${FSL_FIXDIR}/call_matlab.sh -r "${matlab_cmd}"

Dim=`cat ${concatfmrihp}_dims.txt`

log_Msg "Dim: ${Dim}"

## ---------------------------------------------------------------------------
## Run melodic on concatenated file
## ---------------------------------------------------------------------------

# Use the Wishart-based dim estimate instead of the melodic-based estimate (--dim=${Dim})
# Also turn off melodic VN and feed in the input that has already been VN'ed instead (--vn flag, which turns OFF melodic's vn)
# Added "-m ${concatfmri}_brain_mask" to avoid memory issue - Takuya Hayahsi July 2018
melodic_cmd="${MELODIC} -i ${concatfmrihp}_vnts -o ${concatfmrihp}.ica/filtered_func_data.ica --nobet --report --Oall --tr=${tr} --vn --dim=${Dim} -m ${concatfmri}_brain_mask"
if [ ! -z "${log_debugOn}" ] ; then
	melodic_cmd="${melodic_cmd} --verbose --debug"
fi

log_Msg "melodic_cmd: ${melodic_cmd}"
${melodic_cmd}
return_code=$?
log_Msg "melodic has been run: return_code = ${return_code}"
log_Debug_Msg "melodic has been run: Contents of ${concatfmrihp}.ica follow"
if [ ! -z "${log_debugOn}" ] ; then
	ls -lRa ${concatfmrihp}.ica
fi

if [ "${return_code}" -ne "0" ] ; then
    log_Err_Abort "melodic has returned a non-zero code"
fi

# At this point (following melodic), ${concatfmrihp}_vnts is no longer necessary
$FSLDIR/bin/imrm ${concatfmrihp}_vnts

# Delete some time series, resulting from the '--Oall' option in melodic, that aren't needed
# (these may only get created in the context of MIGP)
$FSLDIR/bin/imrm ${concatfmrihp}.ica/filtered_func_data.ica/alldat
$FSLDIR/bin/imrm ${concatfmrihp}.ica/filtered_func_data.ica/concat_data

## ---------------------------------------------------------------------------
## Housekeeping related to files expected for FIX
## ---------------------------------------------------------------------------

cd ${concatfmrihp}.ica

#This is the concated volume time series from the 1st pass VN, with the mean VN map multiplied back in
$FSLDIR/bin/imln ../${concatfmrihp} filtered_func_data
$FSLDIR/bin/imln filtered_func_data.ica/mask mask

if [ `$FSLDIR/bin/imtest ../${concatfmri}_SBRef` = 1 ] ; then
	$FSLDIR/bin/imln ../${concatfmri}_SBRef mean_func
else
	$FSLDIR/bin/imln filtered_func_data.ica/mean mean_func
fi

#This is the concated CIFTI time series from the 1st pass VN, with the mean VN map multiplied back in
if [ -f ../${concatfmri}_Atlas_hp${hp}.dtseries.nii ] ; then
	$FSLDIR/bin/imln ../${concatfmri}_Atlas_hp${hp}.dtseries.nii Atlas.dtseries.nii
fi

mkdir -p reg
cd reg

i_am_at=`pwd`
log_Debug_Msg "current folder ${i_am_at}"

$FSLDIR/bin/imln ../../../../T1w_restore_brain highres
$FSLDIR/bin/imln ../../../../wmparc wmparc
$FSLDIR/bin/imln ../mean_func example_func
$FSLDIR/bin/makerot --theta=0 > highres2example_func.mat
if [ `$FSLDIR/bin/imtest ../../../../T2w` = 1 ] ; then
	$FSLDIR/bin/fslmaths ../../../../T1w -div ../../../../T2w veins -odt float
	$FSLDIR/bin/flirt -in ../../../../brainmask_fs -ref veins -out veinbrainmask -applyxfm
	$FSLDIR/bin/fslmaths veinbrainmask -bin veinbrainmask
	$FSLDIR/bin/fslmaths veins -div `$FSLDIR/bin/fslstats veins -k veinbrainmask -P 50` -mul 2.18 -thr 10 -min 50 -div 50 veins
	$FSLDIR/bin/flirt -in veins -ref example_func -applyxfm -init highres2example_func.mat -out veins_exf
	$FSLDIR/bin/fslmaths veins_exf -mas example_func veins_exf
fi

# Return to ${ConcatFolder}
# Do not use 'cd ${ConcatFolder}', because ${ConcatFolder} may not be an absolute path
cd ../..

## ---------------------------------------------------------------------------
## Actually run FIX
## ---------------------------------------------------------------------------

log_Msg "Running FIX"

# Changes to handle user specified training data file
if [ "X${TrainingData}" != X ]; then
	# User has specified a training data file
	
	# add .RData suffix if not already there
	if [[ "${TrainingData}" != *.RData ]]; then 
		TrainingData=${TrainingData}.RData
	fi
	
	# if the specified TrainingData is not a full path to an existing file,
	# assume that the user is specifying the name of a file in the training_files folder in FSL_FIXDIR
	if [ ! -f "${TrainingData}" ]; then 
		TrainingData=${FSL_FIXDIR}/training_files/${TrainingData}
	fi
	
	# finally, if the TrainingData file is not found, report an error and get out of here
	if [ ! -f "${TrainingData}" ]; then
		log_Err_Abort "FIX training data not found: ${TrainingData}"
	fi
	
else
	# User has not specified a training data file
	#TSC: so, let's look for it and give a useful error, rather than pretending they didn't want to do what they said
	#TSC: if you WANT to use, say, hp150 with hp2000 training, it should be explicitly requested by the user
	#TSC: exception: we will recommend polynomial detrending for performance, and hp 2000 is already trained, and largely indistinguishable
	log_Msg "training data file not specified"
	training_hp="${hp}"
	if [[ ! -f "${FSL_FIXDIR}/training_files/HCP_hp${hp}.RData" ]]; then
	    if [[ "${pdFlag}" == "TRUE" && "${hp}" != "pd0" ]]; then  # "hp=pd0" would be a demeaning only, so doesn't qualify here
	        #hack: hp 2000 is close enough to a polynomial detrend, but the latter is far faster
	        #we know the hp 2000 training data exists, so use it if we don't see an explicit hppd# set
	        training_hp=2000
	    else
    	    log_Err_Abort "no standard training data found for specified high pass (${hp}), please specify training data manually or use a standard high pass setting"
	    fi
	fi
	TrainingData=${FSL_FIXDIR}/training_files/HCP_hp${training_hp}.RData
fi
log_Msg "using training data file: ${TrainingData}"

# set up fix command
if [[ ${doMotionRegression} == "TRUE" ]]; then
    #use array for whitespace safety, even if the rest of the script isn't
    fix_cmd=("${FSL_FIXDIR}/fix" "${concatfmrihp}.ica" "${TrainingData}" "${FixThresh}" -m -h "${AlreadyHP}")
else
    #-h is actually a subargument to -m, and will cause problems if specified without (or even not directly following) -m
    fix_cmd=("${FSL_FIXDIR}/fix" "${concatfmrihp}.ica" "${TrainingData}" "${FixThresh}")
fi
log_Msg "fix_cmd: ${fix_cmd[*]}"
## MPH: The 'fix' script itself will continue to log to its own custom files
## Alert user to where those are
log_Msg "Check ${concatfmrihp}.ica/fix/logMatlab.txt for log output from feature extraction"
log_Msg "Check ${concatfmrihp}.ica/.fix_2b_predict.log for log output from component classification"
log_Msg "Check ${concatfmrihp}.ica/.fix.log for log output from cleanup stage"
"${fix_cmd[@]}"
return_code=$?
if [ "${return_code}" -ne "0" ]; then
    log_Err_Abort "return_code from fix_cmd: ${return_code}"
fi
	
log_Msg "Done running FIX"

## ---------------------------------------------------------------------------
## Rename some files (relative to the default names coded in fix_3_clean)
## ---------------------------------------------------------------------------

$FSLDIR/bin/immv ${concatfmrihp}.ica/filtered_func_data_clean ${concatfmrihp}_clean
if [ "$?" -ne "0" ]; then
    log_Err_Abort "Something went wrong; ${concatfmrihp}.ica/filtered_func_data_clean wasn't created"
fi
if [ -f ${concatfmrihp}.ica/Atlas_clean.dtseries.nii ]; then
    /bin/mv ${concatfmrihp}.ica/Atlas_clean.dtseries.nii ${concatfmri}_Atlas_hp${hp}_clean.dtseries.nii
else
    log_Err_Abort "Something went wrong; ${concatfmrihp}.ica/Atlas_clean.dtseries.nii wasn't created"
fi

# The variance normalization ("_vn") outputs of fix (fix_3_clean) require use of fix1.067 or later
# So check whether those files exist before moving/renaming them
if [ `$FSLDIR/bin/imtest ${concatfmrihp}.ica/filtered_func_data_clean_vn` = 1 ]; then
    $FSLDIR/bin/immv ${concatfmrihp}.ica/filtered_func_data_clean_vn ${concatfmrihp}_clean_vn
fi
if [ -f ${concatfmrihp}.ica/Atlas_clean_vn.dscalar.nii ]; then
    /bin/mv ${concatfmrihp}.ica/Atlas_clean_vn.dscalar.nii ${concatfmri}_Atlas_hp${hp}_clean_vn.dscalar.nii
fi
log_Msg "Done renaming files"

# Remove the 'fake-NIFTI' file created in fix_3_clean for high-pass filtering of the CIFTI (if it exists)
$FSLDIR/bin/imrm ${concatfmrihp}.ica/Atlas

## ---------------------------------------------------------------------------
## Split the cleaned volume and CIFTI back into individual runs.
## ---------------------------------------------------------------------------

## The cleaned volume and CIFTI have no mean.
## The time series of the individual runs were variance normalized via the 1st pass through functionhighpassandvariancenormalize.
## The mean VN map (across runs) was then multiplied into the concatenated time series, and that became the input to FIX.
## We now reverse that process.
## i.e., the mean VN (across runs) is divided back out, and the VN map for the individual run multiplied back in.
## Then the mean is added back in to return the timeseries to its original state minus the noise (as estimated by FIX).

cd ${DIR}  # Return to directory where script was launched (in case inputs used relative paths)

log_Msg "Splitting cifti and nifti back into individual runs"
Start="1"
for fmri in $fmris ; do
	fmriNoExt=$($FSLDIR/bin/remove_ext $fmri)  # $fmriNoExt still includes leading directory components
	NumTPS=`${FSL_FIX_WBC} -file-information ${fmriNoExt}_Atlas.dtseries.nii -no-map-info -only-number-of-maps`
	Stop=`echo "${NumTPS} + ${Start} -1" | bc -l`
	log_Msg "${fmriNoExt}: Start=${Start} Stop=${Stop}"
	
	cifti_out=${fmriNoExt}_Atlas_hp${hp}_clean.dtseries.nii
	${FSL_FIX_WBC} -cifti-merge ${cifti_out} -cifti ${ConcatFolder}/${concatfmri}_Atlas_hp${hp}_clean.dtseries.nii -column ${Start} -up-to ${Stop}
	${FSL_FIX_WBC} -cifti-math "((TCS / VNA) * VN) + Mean" ${cifti_out} -var TCS ${cifti_out} -var VNA ${ConcatFolder}/${concatfmri}_Atlas_hp${hp}_vn.dscalar.nii -select 1 1 -repeat -var VN ${fmriNoExt}_Atlas_hp${hp}_vn.dscalar.nii -select 1 1 -repeat -var Mean ${fmriNoExt}_Atlas_mean.dscalar.nii -select 1 1 -repeat

	readme_for_cifti_out=${cifti_out%.dtseries.nii}.README.txt
	touch ${readme_for_cifti_out}
	short_cifti_out=${cifti_out##*/}
	echo "${short_cifti_out} was generated by applying \"multi-run FIX\" (using 'hcp_fix_multi_run')" >> ${readme_for_cifti_out}
	echo "across the following individual runs:" >> ${readme_for_cifti_out}
	for readme_fmri in ${fmris} ; do
		echo "  ${readme_fmri}" >> ${readme_for_cifti_out}
	done
		
	volume_out=${fmriNoExt}_hp${hp}_clean.nii.gz
	${FSL_FIX_WBC} -volume-merge ${volume_out} -volume ${ConcatFolder}/${concatfmrihp}_clean.nii.gz -subvolume ${Start} -up-to ${Stop}
	fslmaths ${volume_out} -div ${ConcatFolder}/${concatfmrihp}_vn -mul ${fmriNoExt}_hp${hp}_vn -add ${fmriNoExt}_mean ${volume_out}
	Start=`echo "${Start} + ${NumTPS}" | bc -l`
done

## ---------------------------------------------------------------------------
## Remove all the large time series files in ${ConcatFolder}
## ---------------------------------------------------------------------------

## Deleting these files would save a lot of space.
## But downstream scripts (e.g., RestingStateStats) assume they exist, and
## if deleted they would therefore need to be re-created "on the fly" later

# cd ${ConcatFolder}
# log_Msg "Removing large (concatenated) time series files from ${ConcatFolder}"
# $FSLDIR/bin/imrm ${concatfmri}
# $FSLDIR/bin/imrm ${concatfmri}_hp${hp}
# $FSLDIR/bin/imrm ${concatfmri}_hp${hp}_clean
# /bin/rm -f ${concatfmri}_Atlas.dtseries.nii
# /bin/rm -f ${concatfmri}_Atlas_hp${hp}.dtseries.nii
# /bin/rm -f ${concatfmri}_Atlas_hp${hp}_clean.dtseries.nii

cd ${DIR}

log_Msg "Completed!"

